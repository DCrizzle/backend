outline:
[x] "specimen" will be interface
- [x] implementations will be different categories of specimen
- [x] query on specific categories (implementations)
- - [x] e.g. "... on BloodSpecimen { }"
[x] "form" will be interface
- [x] e.g. "ConsentForm"
[x] "consent" type will be a relationship ("connection"?)
- [x] contains:
- - [x] donor
- - [x] date
- - [x] consent form
- - [x] etc
- [x] represents specific agreement made (an "action")
- [ ] "@hasInverse" will primarily be used for Specimen type relationships
- [ ] include an "attribute mapping" type on the Lab entities (?)
- - [ ] possibly to show individual Lab header/field names for attributes within the "root" type
- - [ ] this would be added/updated as Lab nodes are added/updated
- [x] add "orgID" string fields to all types to facilitate multi-tenancy
[ ] dgraph-generated notes
- [ ] "get*" -> accepts ID-specified fields
- - [ ] e.g. "ID!" or "@id" directive
- [ ] "query*"
- - [ ] "filter" field contains fields tagged with "@search" directive
- [ ] dgraph operations
- - [ ] "add", "delete", "get", "query", "update"
- [ ] update relationships using "set"/"remove" keywords in queries
- [ ] searching: https://dgraph.io/docs/query-language/#indexing
