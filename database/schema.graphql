type AgeRange @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	start: Int! @search
	stop: Int! @search
	owner: OwnerOrg!
}

type Consent @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	date: DateTime! @search
	donor: Donor!
	form: ConsentForm!
}

type Demographic @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	sex: Sex! @search
	ageRange: AgeRange!
	race: String!
}

enum Sex {
	MALE
	FEMALE
}

type Donor @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	demographic: Demographic!
	specimens: [Specimen!]!
	consents: [Consent!]! @hasInverse(field: donor)
}

interface Form {
	id: ID!
	owner: OwnerOrg!
	title: String! @search(by: [fulltext])
	body: String! @search(by: [fulltext])
}

type ConsentForm implements Form {
	consent: Consent! @hasInverse(field: form)
}

type ProtocolForm implements Form {
	protocolID: String! @search
}

type Location @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	street: String! @search
	city: String! @search
	county: String! @search
	state: String! @search
	country: String! @search
	zip: Int! @search
}

interface Org {
	id: ID!
	name: String!
	users: [User!]!
	createdOn: DateTime!
	updatedOn: DateTime!
}

type LabOrg implements Org {
	owner: OwnerOrg!
	specimens: [Specimen!]! @hasInverse(field: lab)
}

type OwnerOrg implements Org {
	labs: [LabOrg!]! @hasInverse(field: owner)
	storages: [StorageOrg!]! @hasInverse(field: owner)
}

type StorageOrg implements Org {
	owner: OwnerOrg!
	specimens: [Specimen!]! @hasInverse(field: storage)
}

type Plan @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	name: String!
	labs: [LabOrg!]!
	storages: [StorageOrg!]!
}

type Protocol @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	name: String!
	form: ProtocolForm!
	plan: Plan!
	specimens: [Specimen!]! @hasInverse(field: protocol)
	location: Location!
}

type Result @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	notes: String!
}

type Role @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	name: String!
}

interface Specimen {
	id: ID!
	owner: OwnerOrg!
	lab: LabOrg!
	storage: StorageOrg!
	protocol: Protocol!
	tests: [Test!]! @hasInverse(field: specimen)
}

type BloodSpecimen {
	bloodType: BloodType! @search
}

enum BloodType {
	O_NEG
	O_POS
	A_NEG
	A_POS
	B_NEG
	B_POS
	AB_NEG
	AB_POS
}

type Test @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	id: ID!
	owner: OwnerOrg!
	specimen: Specimen!
	result: Result!
}

type User @auth(
	add: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	query: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	get: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	update: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
	delete: { rule: "{ $isAuthenticated: { eq: \"true\" } }" },
) {
	owner: OwnerOrg!
	email: String! @id
	firstName: String! @search(by: [exact])
	lastName: String! @search(by: [exact])
	role: Role!
	org: Org! @hasInverse(field: users)
}

# Authorization HEADER CLAIMS_KEY_URL RS256 "ALGORITHM_PUBLIC_KEY"
