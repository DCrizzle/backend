{
	"info": {
		"_postman_id": "8bf3d8aa-0216-4dbc-95bb-df287f98f295",
		"name": "folivora",
		"description": "This is a collection of requests that can be used to:\n- add one-off data to a running instance of the `backend` package\n- update bulk-loaded resources for testing purposes\n- directly manipulate data where the `frontend` package does not provide that support\n\nIn order to provide correct authentication while testing, the `frontend` package will need to be started (see the package documentation for reference) and logged into - in the browser console on the \"Network\" tab the `token` request will contain the Auth0 JWT that can be added to the `X-Auth0-Token` field on requests.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "custom",
			"item": [
				{
					"name": "customCreateUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "folivora-helper-secret",
								"value": "c8068820-9976-44ce-8c17-4b2df342a5b9",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Auth0-Token",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"owner\": \"0x2711\",\n\t\"email\": \"john.forstmeier+1@gmail.com\",\n\t\"role\": \"USER_ADMIN\",\n\t\"org\": \"0x2711\",\n\t\"firstName\": \"john\",\n\t\"lastName\": \"forstmeier\",\n\t\"password\": \"testingPassword0!\"\n}"
						},
						"url": {
							"raw": "http://localhost:4080/auth0/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4080",
							"path": [
								"auth0",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkCreateUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"query QueryUsers($filter: UserFilter) { queryUser(filter: $filter) { email, role } }\",\n\t\"variables\": {\n\t\t\"filter\": {\n\t\t\t\"auth0ID\": {\n\t\t\t\t\"eq\": \"auth0|65666630353664382d333238362d343464332d393062322d333732643838343636653264\"\n\t\t\t}\n\t\t}\n\t}\n}\n"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Fetch an unfiltered array of `User` objects from the database."
					},
					"response": []
				},
				{
					"name": "customUpdateUser",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "folivora-helper-secret",
								"type": "text",
								"value": "c8068820-9976-44ce-8c17-4b2df342a5b9"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authZeroID\": \"auth0|66336537386161322d623361632d346633342d623933392d633562373235646433376138\",\n\t\"role\": \"USER_INTERNAL\"\n}"
						},
						"url": {
							"raw": "http://localhost:4080/auth0/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4080",
							"path": [
								"auth0",
								"users"
							]
						},
						"description": "This will directly invoke the `helper` package with a `PATCH` request.\n\n*NOTE*: in order to test this out directly, the tester will need to manually update the Auth0 User ID in payload body. The ID is available in the response payload of the `helperCreateUser` or in the Auth0 Dashboard. It does ***NOT** need to be URL encoded."
					},
					"response": []
				},
				{
					"name": "customDeleteUser",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "folivora-helper-secret",
								"type": "text",
								"value": "c8068820-9976-44ce-8c17-4b2df342a5b9"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"authZeroID\": \"auth0|66336537386161322d623361632d346633342d623933392d633562373235646433376138\"\n}"
						},
						"url": {
							"raw": "http://localhost:4080/auth0/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4080",
							"path": [
								"auth0",
								"users"
							]
						},
						"description": "This will directly invoke the `helper` package with a `PATCH` request.\n\n*NOTE*: in order to test this out directly, the tester will need to manually update the Auth0 User ID in payload body. The ID is available in the response payload of the `helperCreateUser` or in the Auth0 Dashboard. It does ***NOT** need to be URL encoded."
					},
					"response": []
				}
			],
			"description": "This is a collection of requests for directly testing the `backend/custom` package.\n\nThe Dgraph instance will need to be running due to the \"callback\" that `backend/custom` makes but it will _not_ be the direct recipient of these requests. These requests are all to act _as if_ they were coming from the Dgraph `@custom` directives for managing `User` type objects.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "50135fec-da57-4725-bb4b-f48211c756a1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8ebd105b-f00a-48f0-bddd-d56df8b28f6c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "database",
			"item": [
				{
					"name": "getHealth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"query { health { instance address status uptime } }\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin"
							]
						},
						"description": "This is used to do a simple query against the `/admin` endpoint to check the current status of the target Dgraph instance."
					},
					"response": []
				},
				{
					"name": "getSchema",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":\"{ getGQLSchema { generatedSchema } }\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin"
							]
						},
						"description": "Fetch the string representation of the generated schema out of an instance of Dgraph. This is typically stored in the `schema.json` file in the `backend` package for reference.\n"
					},
					"response": []
				},
				{
					"name": "addSpecimens",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTBUMjM6NTE6NTEuODg0WiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzEwMzUxMiwiZXhwIjoxNTk3MTM5NTEyLCJub25jZSI6IlIyZFVRV2xaTFc5b09ISk9TVzlvYW5SbExWbFZhRGxZU204dFEyd3RNMEUxVVY5TVJVNTNjV1ZpTkE9PSJ9.iX7IIO6wKMf9rHhNm-HgsqJBLBU9xRqoMnWQqyz-RyXo8DvOirF8-l6I_DHnVvOXtFvE7UWgFycQagz3SjQnT0H76mOHwlporLThXKyy8nq65nz9MBKic2yGbaNttKuQ7HuVYlsYTviC_AclHWzJ6PMwO6FKVC6ivUXuUUHqCvF0DW6Zc9wvaH7HGmc_nMG5PXP4_iFxAZGe3LQRcDYhwZwxEjm1_q3NxlPQZdT9J32FpohVBmUe5jODKYF9b_CRsz4m0uyZaS134LJhsqAvA2eO8WpR1cagRYlulpnl9NAo3wUPJfu9GINwMDtFHXcxif04E8-nJVPAkU8gQEZHHg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation AddBloodSpecimens($input: [AddBloodSpecimenInput!]!) { addBloodSpecimen(input: $input) { bloodSpecimen { id } } }\",\n\t\"variables\": {\n\t\t\"input\": [\n\t\t\t{\n\t\t\t\t\"externalID\": \"random-external-id\",\n\t\t\t\t\"type\": \"BLOOD\",\n\t\t\t\t\"collectionDate\": \"2006-01-02T15:04:05\",\n\t\t\t\t\"donor\": \"\",\n\t\t\t\t\"container\": \"VIAL\",\n\t\t\t\t\"status\": \"IN_INVENTORY\",\n\t\t\t\t\"destructionDate\": \"\",\n\t\t\t\t\"description\": \"a new sample of blood\",\n\t\t\t\t\"consent\": \"\",\n\t\t\t\t\"owner\": \"\",\n\t\t\t\t\"lab\": \"\",\n\t\t\t\t\"storage\": \"\",\n\t\t\t\t\"protocol\": \"\",\n\t\t\t\t\"tests\": [],\n\t\t\t\t\"bloodType\": \"A_NEG\",\n\t\t\t\t\"volume\": 1.0\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "This is typically going to be used to add one-off `BloodSpecimen` values to the database. Note that several of these fields require that existing values be prepopulated in the database and their IDs provided in this request input.\n\n- `donor`\n- `consent`\n- `owner`\n- `lab`\n- `storage`\n- `protocol`"
					},
					"response": []
				},
				{
					"name": "updateSpecimen",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTBUMjM6NTE6NTEuODg0WiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzEwMzUxMiwiZXhwIjoxNTk3MTM5NTEyLCJub25jZSI6IlIyZFVRV2xaTFc5b09ISk9TVzlvYW5SbExWbFZhRGxZU204dFEyd3RNMEUxVVY5TVJVNTNjV1ZpTkE9PSJ9.iX7IIO6wKMf9rHhNm-HgsqJBLBU9xRqoMnWQqyz-RyXo8DvOirF8-l6I_DHnVvOXtFvE7UWgFycQagz3SjQnT0H76mOHwlporLThXKyy8nq65nz9MBKic2yGbaNttKuQ7HuVYlsYTviC_AclHWzJ6PMwO6FKVC6ivUXuUUHqCvF0DW6Zc9wvaH7HGmc_nMG5PXP4_iFxAZGe3LQRcDYhwZwxEjm1_q3NxlPQZdT9J32FpohVBmUe5jODKYF9b_CRsz4m0uyZaS134LJhsqAvA2eO8WpR1cagRYlulpnl9NAo3wUPJfu9GINwMDtFHXcxif04E8-nJVPAkU8gQEZHHg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation UpdateBloodSpecimen($input: UpdateBloodSpecimenInput!) { updateBloodSpecimen(input: $input) { bloodSpecimen { id } } }\",\n\t\"variables\": {\n\t\t\"input\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"id\": \"\"\n\t\t\t},\n\t\t\t\"set\": {\n\t\t\t\t\"externalID\": \"random-external-id\",\n\t\t\t\t\"type\": \"BLOOD\",\n\t\t\t\t\"collectionDate\": \"2006-01-02T15:04:05\",\n\t\t\t\t\"donor\": \"\",\n\t\t\t\t\"container\": \"VIAL\",\n\t\t\t\t\"status\": \"IN_INVENTORY\",\n\t\t\t\t\"destructionDate\": \"\",\n\t\t\t\t\"description\": \"a new sample of blood\",\n\t\t\t\t\"consent\": \"\",\n\t\t\t\t\"owner\": \"\",\n\t\t\t\t\"lab\": \"\",\n\t\t\t\t\"storage\": \"\",\n\t\t\t\t\"protocol\": \"\",\n\t\t\t\t\"tests\": [],\n\t\t\t\t\"bloodType\": \"A_NEG\",\n\t\t\t\t\"volume\": 1.0\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "This is typically going to be used to add one-off `BloodSpecimen` values to the database. Note that several of these fields require that existing values be prepopulated in the database and their IDs provided in this request input.\n\n- `donor`\n- `consent`\n- `owner`\n- `lab`\n- `storage`\n- `protocol`"
					},
					"response": []
				},
				{
					"name": "deleteSpecimens",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTBUMjM6NTE6NTEuODg0WiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzEwMzUxMiwiZXhwIjoxNTk3MTM5NTEyLCJub25jZSI6IlIyZFVRV2xaTFc5b09ISk9TVzlvYW5SbExWbFZhRGxZU204dFEyd3RNMEUxVVY5TVJVNTNjV1ZpTkE9PSJ9.iX7IIO6wKMf9rHhNm-HgsqJBLBU9xRqoMnWQqyz-RyXo8DvOirF8-l6I_DHnVvOXtFvE7UWgFycQagz3SjQnT0H76mOHwlporLThXKyy8nq65nz9MBKic2yGbaNttKuQ7HuVYlsYTviC_AclHWzJ6PMwO6FKVC6ivUXuUUHqCvF0DW6Zc9wvaH7HGmc_nMG5PXP4_iFxAZGe3LQRcDYhwZwxEjm1_q3NxlPQZdT9J32FpohVBmUe5jODKYF9b_CRsz4m0uyZaS134LJhsqAvA2eO8WpR1cagRYlulpnl9NAo3wUPJfu9GINwMDtFHXcxif04E8-nJVPAkU8gQEZHHg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation DeleteBloodSpecimen($input: BloodSpecimenFilter!) { deleteBloodSpecimen(input: $input) { bloodSpecimen { id } } }\",\n\t\"variables\": {\n\t\t\"input\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"id\": []\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "This request can be used to purge one or more `BloodSpecimen` values from the database as needed."
					},
					"response": []
				},
				{
					"name": "addUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDAzOjAwOjIyLjY1MVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkxODg0MjIsImV4cCI6MTU5OTIyNDQyMn0.aRyHPodpT8GUKe669WS3kEl8f0r1CpWaoFNv4JvQVubFXjoa8j1O9b3DOkirH1Ic-HiyfPV74QFedCSz9cU6YDP3wdjPQEK3zrYyOCS4rh0Y--9Wj40PIKC1KDtX_wZNj4aQ0yvwjai5hMVp-towPkUJWDgO0TjeLRaGwXTUAVU4SfJK3wzOOjXTBY8zbFvuzq7tTZX8mlfh79pm69r0-ZignkCanyDmkbktG_83xfHD74oSZ63MbAx3qogYGctYkolPZVcDBcZCKP_8kKS6FGd99oe0MQBk42ee8VcRyPAHG-aOk4ez93Y-oLrB2vw3qHj5CQe0jDYSfW6k2pFLsQ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation AddUsers($input: [AddUserInput!]!) { addUser(input: $input) { user { email } } }\",\n\t\"variables\": {\n\t\t\"input\": [\n\t\t\t{\n\t\t\t\t\"owner\": {\n\t\t\t\t\t\"id\": \"0x2711\"\n\t\t\t\t},\n\t\t\t\t\"email\": \"john.forstmeier@gmail.com\",\n\t\t\t\t\"firstName\": \"john\",\n\t\t\t\t\"lastName\": \"forstmeier\",\n\t\t\t\t\"role\": \"USER_ADMIN\",\n\t\t\t\t\"org\": {\n\t\t\t\t\t\"id\":\"0x2711\"\n\t\t\t\t},\n\t\t\t\t\"auth0ID\": \"auth0|5f17a3f1dbf6ff00135ca6a7\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Create new instance of the `User` object in the database. Note that this requires that certain objects exist in the database ahead of time:\n\n- `owner`\n\t- this would be the actual org the user has access to\n- `org`\n\t- this would be the \"sub-org\" the user belongs to (e.g. a lab)"
					},
					"response": []
				},
				{
					"name": "getUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTBUMjM6NTE6NTEuODg0WiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzEwMzUxMiwiZXhwIjoxNTk3MTM5NTEyLCJub25jZSI6IlIyZFVRV2xaTFc5b09ISk9TVzlvYW5SbExWbFZhRGxZU204dFEyd3RNMEUxVVY5TVJVNTNjV1ZpTkE9PSJ9.iX7IIO6wKMf9rHhNm-HgsqJBLBU9xRqoMnWQqyz-RyXo8DvOirF8-l6I_DHnVvOXtFvE7UWgFycQagz3SjQnT0H76mOHwlporLThXKyy8nq65nz9MBKic2yGbaNttKuQ7HuVYlsYTviC_AclHWzJ6PMwO6FKVC6ivUXuUUHqCvF0DW6Zc9wvaH7HGmc_nMG5PXP4_iFxAZGe3LQRcDYhwZwxEjm1_q3NxlPQZdT9J32FpohVBmUe5jODKYF9b_CRsz4m0uyZaS134LJhsqAvA2eO8WpR1cagRYlulpnl9NAo3wUPJfu9GINwMDtFHXcxif04E8-nJVPAkU8gQEZHHg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"query QueryUsers { queryUser(filter: {}) { user { email } } }\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Fetch an unfiltered array of `User` objects from the database."
					},
					"response": []
				},
				{
					"name": "updateUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTBUMjM6NTE6NTEuODg0WiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzEwMzUxMiwiZXhwIjoxNTk3MTM5NTEyLCJub25jZSI6IlIyZFVRV2xaTFc5b09ISk9TVzlvYW5SbExWbFZhRGxZU204dFEyd3RNMEUxVVY5TVJVNTNjV1ZpTkE9PSJ9.iX7IIO6wKMf9rHhNm-HgsqJBLBU9xRqoMnWQqyz-RyXo8DvOirF8-l6I_DHnVvOXtFvE7UWgFycQagz3SjQnT0H76mOHwlporLThXKyy8nq65nz9MBKic2yGbaNttKuQ7HuVYlsYTviC_AclHWzJ6PMwO6FKVC6ivUXuUUHqCvF0DW6Zc9wvaH7HGmc_nMG5PXP4_iFxAZGe3LQRcDYhwZwxEjm1_q3NxlPQZdT9J32FpohVBmUe5jODKYF9b_CRsz4m0uyZaS134LJhsqAvA2eO8WpR1cagRYlulpnl9NAo3wUPJfu9GINwMDtFHXcxif04E8-nJVPAkU8gQEZHHg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation UpdateUser($input: UpdateUserInput!) { updateUser(input: [$input]) { user { email } } }\",\n\t\"variables\": {\n\t\t\"input\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"id\": \"\"\n\t\t\t},\n\t\t\t\"set\": {\n\t\t\t\t\"owner\": \"\",\n\t\t\t\t\"email\": \"john@folivora.com\",\n\t\t\t\t\"firstName\": \"john\",\n\t\t\t\t\"lastName\": \"forstmeier\",\n\t\t\t\t\"role\": {\n\t\t\t\t\t\"name\": \"USER_ADMIN\"\n\t\t\t\t},\n\t\t\t\t\"org\": {\n\t\t\t\t\t\"id\":\"\"\n\t\t\t\t},\n\t\t\t\t\"user_id\": \"auth0_id\"\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Edit existing instances of the `User` object in the database. Note that this requires that certain objects exist in the database ahead of time (assuming these fields are the ones being edited):\n\n- `owner`\n\t- this would be the actual org the user has access to\n- `org`\n\t- this would be the \"sub-org\" the user belongs to (e.g. a lab)"
					},
					"response": []
				},
				{
					"name": "deleteUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTBUMjM6NTE6NTEuODg0WiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzEwMzUxMiwiZXhwIjoxNTk3MTM5NTEyLCJub25jZSI6IlIyZFVRV2xaTFc5b09ISk9TVzlvYW5SbExWbFZhRGxZU204dFEyd3RNMEUxVVY5TVJVNTNjV1ZpTkE9PSJ9.iX7IIO6wKMf9rHhNm-HgsqJBLBU9xRqoMnWQqyz-RyXo8DvOirF8-l6I_DHnVvOXtFvE7UWgFycQagz3SjQnT0H76mOHwlporLThXKyy8nq65nz9MBKic2yGbaNttKuQ7HuVYlsYTviC_AclHWzJ6PMwO6FKVC6ivUXuUUHqCvF0DW6Zc9wvaH7HGmc_nMG5PXP4_iFxAZGe3LQRcDYhwZwxEjm1_q3NxlPQZdT9J32FpohVBmUe5jODKYF9b_CRsz4m0uyZaS134LJhsqAvA2eO8WpR1cagRYlulpnl9NAo3wUPJfu9GINwMDtFHXcxif04E8-nJVPAkU8gQEZHHg"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation DeleteUsers($input: UserFilter!) { deleteUser(input: $input) { user { id } } }\",\n\t\"variables\": {\n\t\t\"input\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"id\": []\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "This request can be used to purge one or more `User` values from the database as needed."
					},
					"response": []
				},
				{
					"name": "addOwnerOrgs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweGEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDAwOjQ2OjIxLjk3MVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkxODAzODIsImV4cCI6MTU5OTIxNjM4Mn0.HE1V4SM9xQrO9UpTgMappw4Fupq5xFY3m9C0LKto4tUXBKwrsPPjaAWNNpWz6z-0ye7fF80S6iylFqmDwIQiMws9c0l6hK8zoSgHbW1B0WpjEtbA7lF19u_TevqxuxJ6RUw12jhJ8o91SedGHWEes2MrKvdpfSPuh729w2mRu56UhZaoGoBmMV3AkX8wt5I6j9yzp3j33MeIudtaQd-lnlz9BKfUTarJi3jWXncPRbr34v5SEDcN29Zc4ukrcmkNPHj5r3UDCd-OETMG3rv-YkY_qEdqATUHXfAUN7YSi87ABrBeFrKGT2LmJry94QyK1D3kVom5OgPSn-a64eGS8w"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation AddOwnerOrgs($input: [AddOwnerOrgInput!]!) { addOwnerOrg(input: $input)  { ownerOrg { id } } }\",\n\t\"variables\": {\n\t\t\"input\": [\n\t\t\t{\n\t\t\t\t\"street\": \"springfield\",\n\t\t\t\t\"city\": \"bellefonte\",\n\t\t\t\t\"county\": \"centre\",\n\t\t\t\t\"state\": \"pa\",\n\t\t\t\t\"country\": \"us\",\n\t\t\t\t\"zip\": 16823,\n\t\t\t\t\"name\": \"first org\",\n\t\t\t\t\"users\": [],\n\t\t\t\t\"createdOn\": \"2006-01-02T15:04:05\",\n\t\t\t\t\"updatedOn\": \"2006-01-02T15:04:05\",\n\t\t\t\t\"labs\": [],\n\t\t\t\t\"storages\": []\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Create new instance of the `User` object in the database. Note that this requires that certain objects exist in the database ahead of time:\n\n- `owner`\n\t- this would be the actual org the user has access to\n- `org`\n\t- this would be the \"sub-org\" the user belongs to (e.g. a lab)"
					},
					"response": []
				},
				{
					"name": "getOwnerOrgs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiI0MiJ9LCJuaWNrbmFtZSI6ImpvaG4uZm9yc3RtZWllciIsIm5hbWUiOiJqb2huLmZvcnN0bWVpZXJAZ21haWwuY29tIiwicGljdHVyZSI6Imh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzhjOWEzMmVjNzE4ZDA5ODE2MTM5YTUyYTU4MDk5YzhmP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGam8ucG5nIiwidXBkYXRlZF9hdCI6IjIwMjAtMDgtMTFUMTQ6Mjc6NTkuMDgxWiIsImVtYWlsIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJpc3MiOiJodHRwczovL2ZvbGl2b3JhLnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZjE3YTNmMWRiZjZmZjAwMTM1Y2E2YTciLCJhdWQiOiJlVU5BOFVTZ250czZsaWlkUmF5cVdHRFBYQ1puUGczMyIsImlhdCI6MTU5NzE1NjA4MCwiZXhwIjoxNTk3MTkyMDgwLCJub25jZSI6IlQwTjFjMWQ0TUVoWWVXeFRablZNYXpoRVdqZFFZa2gyUWw5dk1XMUVVbG91TUZKWFVVRXRiMlU0YVE9PSJ9.hqKyE6PIPzI3EVScZlFDC-dYm9J4G4_d2qYls090fJuwh92qOe-S2shLDl0haZjmw2CbH2iNT_RvC7mWzI32HlaZjnR43Q6kqdtVy2kDGZ91SD1FqiTi9kjoXxWRZrCWVj9mVcTnGfqyRC6WtTdLpBxu7VR_RHsjEZEVnejq3fNa281P8lCOYWoQj-axJ9Un8pnnfcOqxRI46UZq0HMQ-thSMJzgT5EIzaYL5gHmGrg5oUl27sVsjTN8oglIav1mq2l5J3QnKLLbR95oBeOLXA5LI6CjbRLSLyciuX0o85axfPUdRAOh8dOWKR7_a4yBe2n0ZVdiuw5Nz2D_0hMjCQ"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"query QueryOwnerOrgs { queryOwnerOrg(filter: {}) { id } }\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Fetch an unfiltered array of `User` objects from the database."
					},
					"response": []
				},
				{
					"name": "createUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg"
							},
							{
								"key": "folivora-helper-secret",
								"value": "c8068820-9976-44ce-8c17-4b2df342a5b9",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation CreateUser($owner: String!, $email: String!, $password: String!, $firstName: String!, $lastName: String!, $role: Role!, $org: String!) { createUser(owner: $owner, email: $email, password: $password, firstName: $firstName, lastName: $lastName, role: $role, org: $org) { firstName, lastName, auth0ID } }\",\n\t\"variables\": {\n\t\t\"owner\": \"0x2711\",\n\t\t\"email\": \"john.forstmeier+9@gmail.com\",\n\t\t\"password\": \"reallyGoodPassword1!\",\n\t\t\"firstName\": \"john\",\n\t\t\"lastName\": \"forstmeier\",\n\t\t\"role\": \"USER_ADMIN\",\n\t\t\"org\": \"0x2711\"\n\t}\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						},
						"description": "Creates a user using the `@custom` mutation.\n\nRequests are made out to Auth0 to add the user with the provided fields and then a response is made with the full `User` type. Inside the `backend/custom` package, a Dgraph request is made that _actually_ populates the `User` object into the database."
					},
					"response": []
				},
				{
					"name": "editUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg"
							},
							{
								"key": "folivora-helper-secret",
								"type": "text",
								"value": "c8068820-9976-44ce-8c17-4b2df342a5b9"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation EditUser($authZeroID: String!, $role: Role, $password: String) { editUser(authZeroID: $authZeroID, role: $role, password: $password) { firstName, lastName, auth0ID } }\",\n\t\"variables\": {\n\t\t\"authZeroID\": \"auth0|65666630353664382d333238362d343464332d393062322d333732643838343636653264\",\n\t\t\"role\": \"USER_INTERNAL\"\n\t}\n}\n"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth0-Token",
								"type": "text",
								"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Img3NTBPT3RTb0s2dnlCVWdQZXlweSJ9.eyJodHRwczovL2ZvbGl2b3JhLmlvL2p3dC9jbGFpbXMiOnsiaXNBdXRoZW50aWNhdGVkIjoidHJ1ZSIsInJvbGUiOiJVU0VSX0FETUlOIiwib3JnSUQiOiIweDI3MTEifSwibmlja25hbWUiOiJmcm9zdHkiLCJuYW1lIjoiam9obi5mb3JzdG1laWVyQGdtYWlsLmNvbSIsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci84YzlhMzJlYzcxOGQwOTgxNjEzOWE1MmE1ODA5OWM4Zj9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRmpvLnBuZyIsInVwZGF0ZWRfYXQiOiIyMDIwLTA5LTA0VDEzOjMwOjA1LjYzMVoiLCJlbWFpbCI6ImpvaG4uZm9yc3RtZWllckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9mb2xpdm9yYS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWYxN2EzZjFkYmY2ZmYwMDEzNWNhNmE3IiwiYXVkIjoiZVVOQThVU2dudHM2bGlpZFJheXFXR0RQWENablBnMzMiLCJpYXQiOjE1OTkyMjYyMDUsImV4cCI6MTU5OTI2MjIwNX0.fQi4oMXv0KHNt0JEMCaId6U8LE_i9fNYBo3vQcS91hrYt_zaZ2MQ31W_cg6oQPPwEA3gxGAylKY4ei20WMuN5EMDxhB6CaWNfNvsP7JLQc21ysT6_UmuRevEHKbAn3KEws_knDNsBKi_lao5LwO41pK5nvk2thZJmynjVgrUZ2UVU32F3abf4Q_DxgoO1JC60FIz0bwTzdnLIERrLLZyv-AQQFuYORt6QfOq0zrJQ51TJjiKHb8w9xVCqbjU8enI0m4xKiUghRouwod1gVnOykKW8SglsgRVvcthv3aElCs3qY_QwMjx3M0SVIv0R3YscsFnaJl-as9K3H6aCL0qgg"
							},
							{
								"key": "folivora-helper-secret",
								"type": "text",
								"value": "c8068820-9976-44ce-8c17-4b2df342a5b9"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": \"mutation RemoveUser($authZeroID: String!) { removeUser(authZeroID: $authZeroID) { firstName, lastName, auth0ID } }\",\n\t\"variables\": {\n\t\t\"authZeroID\": \"auth0|65666630353664382d333238362d343464332d393062322d333732643838343636653264\"\n\t}\n}\n"
						},
						"url": {
							"raw": "http://127.0.0.1:8080/graphql",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"description": "This is a collection primarily for directly manipulating the contents of the database individually. See the `backend/demo` package for bulk data upload.\n\nNote that this also holds the `User` type-specific manipulations which require some additional setup including the `folivora-helper-secret` header.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2cd5ebd2-db9a-4068-81b4-2087eed3b64a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a022d107-c82a-46f8-9bc2-872f0e646470",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}
